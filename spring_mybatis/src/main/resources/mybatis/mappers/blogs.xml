<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.co.jhta.dao.BlogDao">

	<!-- 
		#{writer.id} : blog.getWriter().getId()
	 -->
	<insert id="insertBlog" parameterType="Blog">
		insert into spring_blogs
		(blog_no ,blog_title, blog_writer,blog_content)
		values
		(spring_blog_seq.nextval,#{title},#{writer.id},#{content})
	</insert>
	
	<!-- 
		"writer.id" : blog.getWriter().setId("획득된 값") 
	-->
	<select id="getBlogByNo" parameterType="int" resultType="Blog">
		select a.blog_no 				as no, 
			   a.blog_title 			as title,
			   a.blog_writer 			as "writer.id",
			   b.user_name 				as "writer.name",
			   b.user_email 			as "writer.email",
			   a.blog_content 			as content,
			   a.blog_likes 			as likes,
			   a.blog_comment_counts 	as commentCounts,
			   a.blog_created_date 		as createdDate
		from spring_blogs a, spring_users b
		where a.blog_no = #{value}
		and a.blog_writer = b.user_id
		order by a.blog_no desc
	</select>
	
	<select id="getBlogs" resultType="Blog">
		select a.blog_no 				as no, 
			   a.blog_title 			as title,
			   a.blog_writer 			as "writer.id",
			   b.user_name 				as "writer.name",
			   b.user_email 			as "writer.email",
			   a.blog_content 			as content,
			   a.blog_likes 			as likes,
			   a.blog_comment_counts 	as commentCounts,
			   a.blog_created_date 		as createdDate
		from spring_blogs a, spring_users b
		and a.blog_writer = b.user_id
		order by a.blog_no desc
	</select>
	

	<select id="getBlogsByWriter" parameterType="string" resultType="Blog">
		select a.blog_no 				as no, 
			   a.blog_title 			as title,
			   a.blog_writer 			as "writer.id",
			   b.user_name 				as "writer.name",
			   b.user_email 			as "writer.email",
			   a.blog_content 			as content,
			   a.blog_likes 			as likes,
			   a.blog_comment_counts 	as commentCounts,
			   a.blog_created_date 		as createdDate
		from spring_blogs a, spring_users b
		where a.blog_writer = #{value}
		and a.blog_writer = b.user_id
		order by a.blog_no desc
	</select>
	
	<update id="updateBlog" parameterType="Blog">
		update spring_blogs
			set
				blog_title = #{title},
				blog_writer = #{writer.id},
				blog_content = #{content},
				blog_likes = #{likes},
				blog_comment_counts = #{commentCounts}				
			where blog_no = #{no}
	</update>
	
	<delete id="deleteBlogByNo" parameterType="int">
		delete from spring_blogs
				where blog_no = #{value}
	</delete>
	
	<delete id="deleteBlogsByWriter" parameterType="string">
		delete from spring_blogs
				where blog_writer = #{writer.id}
	</delete>
</mapper>