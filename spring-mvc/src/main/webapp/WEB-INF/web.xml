<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee https://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

	<!-- Root WebApplicationContext(스프링 컨테이너) 설정 -->
	<!-- 
		<context-param> 태그를 사용해서 Spring Bean 설정 파일의 경로를 지정한다.
			* <param-name> 태그에 적는 contextConfigLocation은 고정된 값이다.
		<listener> 태그를 사용해서 웹 서버에서 특정 이벤트 발생 시 실행될 리스너 클래스를 지정할 수 있다.
			* ContextLoaderListener : ServletContext 객체가 생성될 때 실행되는 Listener 클래스
			* ServletContext : 웹 서버가 켜질 때 객체가 생성되고, 웹 서버가 중지될 때 사라진다.
			* ContextLoaderListener : 웹 서버가 켜질 때 자동으로 실행되고 Spring Container를 생성한다.
									  생성된 Spring Container는 <context-param> 태그에 정의된 설정 파일을 읽어서 객체를 생성하고 조립한다.
			* ContextLoaderListener가 생성한 Spring Container는 Root Spring Container가 된다.
			* Root Spring Container에서 생성/조립된 객체는 자식 스프링 컨테이너(DispatcherServlet이 생성한 Spring Container)에서도 참조할 수 있다.
			* 자식 스프링 컨테이너는 Root Spring Container의 객체를 검색해서 자식 스프링 컨테이너가 생성한 객체에 조립할 수 있다.
	 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/spring/context-root.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>	

	<!-- 
		문자인코딩 필터를 톰캣에 배포하기
	 -->
	<filter>
		<filter-name>characterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>	 	
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>characterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- Child WebApplicationContext(스프링 컨테이너) 설정 -->
	<!-- 
		FrontController 역할을 수행하는 DispatcherServlet 톰캣에 배포하기
			* DispatcherServlet는 Spring Container를 생성하고, context-mvc.xml을 읽어서 설정 파일에 정의된 객체를 생성하고 조립한다.
	 -->
	<servlet>
		<servlet-name>frontController</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/context-mvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>frontController</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>
</web-app>
